"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _router = _interopRequireDefault(require("next/router"));

var _url = require("url");

var _utils = require("../utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
  This `Router` is a wrap of the standard
  NextJs `Router`, with some simple lang
  redirect logic in place.

  If you haven't already, read this issue comment:
  https://github.com/zeit/next.js/issues/2833#issuecomment-414919347

  Very important: if you import `Router` from NextJs directly,
  and not this file, your lang subpath routing will break.
*/
const propertyFields = ['pathname', 'route', 'query', 'asPath', 'components', 'events'];
const coreMethods = ['reload', 'back', 'beforePopState', 'ready', 'prefetch'];
const wrappedMethods = ['push', 'replace'];

function _default(nextI18NextConfig) {
  const Router = {};
  propertyFields.forEach(field => {
    Object.defineProperty(Router, field, {
      get() {
        return _router.default[field];
      }

    });
  });
  coreMethods.forEach(method => {
    Router[method] = (...args) => _router.default[method](...args);
  });
  wrappedMethods.forEach(method => {
    Router[method] = (path, as, options) => {
      const {
        config,
        i18n
      } = nextI18NextConfig;

      if ((0, _utils.localeSubpathRequired)(nextI18NextConfig, i18n.languages[0])) {
        const href = (0, _utils.parseHref)(path);
        const {
          pathname,
          query
        } = href;
        const asPath = as || (0, _url.format)(href, {
          unicode: true
        });
        const [correctedAs, correctedQuery] = (0, _utils.lngPathCorrector)(config, i18n, {
          asPath,
          query
        });
        return _router.default[method]({
          pathname,
          query: correctedQuery
        }, correctedAs, options);
      }

      return _router.default[method](path, as, options);
    };
  });
  return Router;
}

module.exports = exports.default;
module.exports.default = exports.default;